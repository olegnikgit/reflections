What happens when you initialize a repository? Why do you need to do it?

A .git file is created. You can now commit you repository in order to track versions.

How is the staging area different from the working directory and the repository? What value do you think it offers?

It is a buffer between a working directory and a repository. It allows to control the files to be committed to the repository.

How can you use the staging area to make sure you have one commit per logical change?

You can select and verify which files to commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Brances are usefull when you want to make some differnt development directions in your code.

How do the diagrams help you visualize the branch structure?

You can see the commits accessible for each branch

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The code will be merged according to the merging rules. This is done to see, that the merging took place.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Automatic merging is faster, but it is not always possible. In this case we use manual merging.
